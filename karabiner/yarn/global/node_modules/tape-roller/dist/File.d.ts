import { Manipulator } from './Manipulator';
import { IOptions } from 'glob';
import { ModifyType } from './types';
export declare class File {
    static generate(source: string, destination: string, parameters?: {
        [key: string]: any;
    }, options?: IOptions): Promise<void>;
    static modify(fileName: string, pattern: RegExp, modifier: ModifyType, options?: IOptions): Promise<void>;
    static getFileTask(source: string, options?: IOptions): Promise<Manipulator>;
    static move(from: string, to: string): Promise<void>;
    static read(file: string | string[], concatFileName?: boolean, options?: IOptions): Manipulator;
    static readGlob(pattern: string, options?: IOptions): Promise<Manipulator>;
    static mkdir(path: string, recursive?: boolean): Promise<void>;
    static copy(source: string, destination: string): Promise<void>;
    static remove(path: string, recursive?: boolean): Promise<void>;
}
