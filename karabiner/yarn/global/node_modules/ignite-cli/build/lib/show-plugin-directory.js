"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var exit_codes_1 = require("./exit-codes");
var fetch_plugin_registry_1 = require("./fetch-plugin-registry");
/**
 * Shows a list of known plugins.
 *
 * @param {Object} toolbox The gluegun toolbox.
 */
function default_1(toolbox) {
    return __awaiter(this, void 0, void 0, function () {
        var _a, pipe, keys, filter, map, print, parameters, runtime, colors, newline, info, table, error, directory, plugins, search, pluginTable;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _a = require('ramda'), pipe = _a.pipe, keys = _a.keys, filter = _a.filter, map = _a.map;
                    print = toolbox.print, parameters = toolbox.parameters, runtime = toolbox.runtime;
                    colors = print.colors, newline = print.newline, info = print.info, table = print.table, error = print.error;
                    return [4 /*yield*/, fetch_plugin_registry_1.default(toolbox)];
                case 1:
                    directory = _b.sent();
                    plugins = runtime.plugins.map(function (p) { return p.name; });
                    search = parameters.first;
                    pluginTable = pipe(keys, filter(function (k) {
                        if (!search)
                            return true;
                        return k.includes(search);
                    }), map(function (k) {
                        var plugin = directory[k];
                        var installed = plugins.includes(k);
                        return [k, plugin.author, installed ? '[Installed]' : ''];
                    }))(directory);
                    newline();
                    info(colors.highlight('Ignite Plugins'));
                    newline();
                    if (pluginTable.length > 0) {
                        info(colors.muted('Install with `ignite add pluginname` and remove with `ignite remove pluginname`'));
                        newline();
                        table(pluginTable);
                    }
                    else {
                        error("No plugin with the search string '" + search + "'.");
                    }
                    newline();
                    process.exit(exit_codes_1.default.OK);
                    return [2 /*return*/];
            }
        });
    });
}
exports.default = default_1;
//# sourceMappingURL=show-plugin-directory.js.map