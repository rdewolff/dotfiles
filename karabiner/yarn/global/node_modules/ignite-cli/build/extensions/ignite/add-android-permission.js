"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var exit_codes_1 = require("../../lib/exit-codes");
var APP_PATH = process.cwd();
exports.default = (function (toolbox) {
    /**
     * Sets Android Permission
     *
     * @param {string} key - Permission name to be inserted e.g. `ACCESS_NETWORK_STATE`
     */
    function addAndroidPermission(key) {
        var filesystem = toolbox.filesystem, print = toolbox.print, ignite = toolbox.ignite;
        var permissionString = "    <uses-permission android:name=\"android.permission." + key.toUpperCase() + "\" />";
        var manifestFile = APP_PATH + "/android/app/src/main/AndroidManifest.xml";
        if (!filesystem.exists(manifestFile)) {
            var msg = "No '" + manifestFile + "' file found in this folder, are you sure it is a valid React Native project?";
            print.error(msg);
            process.exit(exit_codes_1.default.GENERIC);
        }
        else if (!ignite.patching.isInFile(manifestFile, permissionString)) {
            // Insert permission to AndroidManifest
            ignite.patchInFile(manifestFile, {
                after: 'uses-permission',
                insert: permissionString,
            });
        }
    }
    return addAndroidPermission;
});
//# sourceMappingURL=add-android-permission.js.map