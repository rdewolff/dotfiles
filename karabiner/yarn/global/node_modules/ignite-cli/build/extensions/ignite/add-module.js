"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var ramda_1 = require("ramda");
var path = require("path");
exports.default = (function (toolbox) {
    var getModuleName = function (moduleName, options) {
        var name;
        if (options.version) {
            name = moduleName + "@" + options.version;
        }
        else if (toolbox.parameters.first.includes(path.sep)) {
            // If adding from a directory, then display a deprecation warning.
            // This is to alert plugin authors to the issue without cluttering others' output.
            toolbox.print.warning("DEPRECATION WARNING:");
            toolbox.print.warning("Plugin should specify specific version for NPM module " + moduleName + " in addModule call.");
            toolbox.print.warning("In your addModule call, add the following:");
            toolbox.print.warning("   await ignite.addModule(NPM_MODULE_NAME, { version: 'VERSION HERE' })");
        }
        return name || moduleName;
    };
    /**
     * Adds a npm-based module to the project.
     */
    function addModule(moduleName, options) {
        if (options === void 0) { options = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var print, system, ignite, useYarn, moduleFullName, depType, spinner, addSwitch, cmd, installSwitch, cmd, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        print = toolbox.print, system = toolbox.system, ignite = toolbox.ignite;
                        useYarn = ignite.useYarn;
                        moduleFullName = getModuleName(moduleName, options);
                        depType = options.dev ? 'as dev dependency' : '';
                        spinner = print.spin("\u25B8 installing " + print.colors.cyan(moduleFullName) + " " + depType);
                        if (!useYarn) return [3 /*break*/, 2];
                        addSwitch = options.dev ? '--dev' : '';
                        cmd = ramda_1.trim("yarn add " + moduleFullName + " " + addSwitch);
                        ignite.log(cmd);
                        return [4 /*yield*/, system.run(cmd)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 4];
                    case 2:
                        installSwitch = options.dev ? '--save-dev' : '--save';
                        cmd = ramda_1.trim("npm i " + moduleFullName + " " + installSwitch);
                        ignite.log(cmd);
                        return [4 /*yield*/, system.run(cmd)];
                    case 3:
                        _a.sent();
                        _a.label = 4;
                    case 4:
                        spinner.stop();
                        if (!options.link) return [3 /*break*/, 8];
                        _a.label = 5;
                    case 5:
                        _a.trys.push([5, 7, , 8]);
                        spinner.text = "\u25B8 linking";
                        spinner.start();
                        return [4 /*yield*/, system.spawn("react-native link " + moduleName, {
                                stdio: 'ignore',
                            })];
                    case 6:
                        _a.sent();
                        spinner.stop();
                        return [3 /*break*/, 8];
                    case 7:
                        err_1 = _a.sent();
                        spinner.fail();
                        throw new Error("Error running: react-native link " + moduleName + ".\n" + err_1.stderr);
                    case 8: return [2 /*return*/];
                }
            });
        });
    }
    return addModule;
});
//# sourceMappingURL=add-module.js.map