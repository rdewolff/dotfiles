"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ramda_1 = require("ramda");
var igniteConfigFilename = "./ignite/ignite.json";
exports.default = (function (toolbox) {
    var filesystem = toolbox.filesystem;
    /**
     * Reads the contents of the ignite/ignite.json configuration.
     */
    function loadIgniteConfig() {
        return filesystem.exists(igniteConfigFilename) ? filesystem.read(igniteConfigFilename, 'json') || {} : {};
    }
    /**
     * Saves a new ignite config file.
     */
    function saveIgniteConfig(config) {
        if (config === void 0) { config = {}; }
        filesystem.write(igniteConfigFilename, config, { jsonIndent: 2 });
    }
    /**
     * Sets an ignite config setting. Takes an object or a key/value pair.
     */
    function setIgniteConfig(keyOrObject, value) {
        var igniteConfig = loadIgniteConfig();
        if (typeof keyOrObject === 'string') {
            igniteConfig[keyOrObject] = value;
        }
        else {
            Object.assign(igniteConfig, keyOrObject);
        }
        saveIgniteConfig(igniteConfig);
    }
    /**
     * Remove Global Config setting
     */
    function removeIgniteConfig(key) {
        var igniteConfig = ramda_1.dissoc(key, loadIgniteConfig());
        saveIgniteConfig(igniteConfig);
    }
    return {
        setIgniteConfig: setIgniteConfig,
        removeIgniteConfig: removeIgniteConfig,
        saveIgniteConfig: saveIgniteConfig,
        loadIgniteConfig: loadIgniteConfig,
    };
});
//# sourceMappingURL=ignite-config.js.map